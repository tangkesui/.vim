let mapleader=" "
set nocompatible 
" 
:set mouse=a

" 改变键位
noremap k j
noremap i k
noremap j h
noremap \ i
noremap s i
noremap S I
noremap K 5j
noremap I 5k
" 语法高亮
syntax on 
" Tab键的宽度为2
set tabstop=2
" 统一缩进为2
set softtabstop=2
" 自动缩进
set autoindent
" 代码补全
set completeopt=preview,menu
" 不需要备份
set nobackup
" 禁止生成临时文件
set noswapfile
" 显示行号
set number
set wrap
set wildmenu
set hlsearch
set ignorecase
set smartcase
noremap - Nzz
noremap = nzz
noremap <LEADER><CR> :noh<CR> 
noremap <LEADER>n :vsplit<CR> 
noremap <LEADER>N :split<CR>
noremap <LEADER>j <C-w>h
noremap <LEADER>l <C-w>l
noremap <LEADER>k <C-w>j
noremap <LEADER>i <C-w>k

noremap <DOWN> :res +5<CR>
noremap <UP> :res -5<CR>
noremap <LEFT> :vertical resize +5<CR>
noremap <RIGHT> :vertical resize -5<CR>
noremap	mm :tabe<CR>
noremap [ :-tabnext<CR>
noremap ] :+tabnext<CR>

" NERDTree
let NERDTreeMapOpenInTab = "t"
let NERDTreeMapOpenSplit = ""

noremap tt :NERDTreeToggle<CR>





" vim-plug
" Specify a directory for plugins
" - For Neovim: stdpath('data') . '/plugged'
" - Avoid using standard Vim directory names like 'plugin'

call plug#begin('~/.vim/plugged')

Plug 'preservim/nerdtree'
Plug 'Valloric/YouCompleteMe'
Plug 'dense-analysis/ale'
Plug 'junegunn/vim-easy-align'
Plug 'https://github.com/junegunn/vim-github-dashboard.git'



" Initialize plugin system
call plug#end()





" Compatible with ranger 1.4.2 through 1.7.*
"
" Add ranger as a file chooser in vim
"
" If you add this code to the .vimrc, ranger can be started using the command
" ":RangerChooser" or the keybinding "<leader>r".  Once you select one or more
" files, press enter and ranger will quit again and vim will open the selected
" files.

function! RangeChooser()
    let temp = tempname()
    " The option "--choosefiles" was added in ranger 1.5.1. Use the next line
    " with ranger 1.4.2 through 1.5.0 instead.
    "exec 'silent !ranger --choosefile=' . shellescape(temp)
    if has("gui_running")
        exec 'silent !xterm -e ranger --choosefiles=' . shellescape(temp)
    else
        exec 'silent !ranger --choosefiles=' . shellescape(temp)
    endif
    if !filereadable(temp)
        redraw!
        " Nothing to read.
        return
    endif
    let names = readfile(temp)
    if empty(names)
        redraw!
        " Nothing to open.
        return
    endif
    " Edit the first item.
    exec 'edit ' . fnameescape(names[0])
    " Add any remaning items to the arg list/buffer list.
    for name in names[1:]
        exec 'argadd ' . fnameescape(name)
    endfor
    redraw!
endfunction
command! -bar RangerChooser call RangeChooser()
nnoremap <leader>r :<C-U>RangerChooser<CR>


" The Arch Linux global vimrc - setting only a few sane defaults
"
" DO NOT EDIT THIS FILE. IT'S OVERWRITTEN UPON UPGRADES.
"
" Use /etc/vimrc for system-wide and $HOME/.vimrc for personal configuration
" (for details see ':help initialization').
"
" Use :help '<option>' to see the documentation for the given option.

" Use Vim defaults instead of 100% vi compatibility
" Avoid side-effects when nocompatible has already been set.
if &compatible
  set nocompatible
endif

set backspace=indent,eol,start
set ruler
set suffixes+=.aux,.bbl,.blg,.brf,.cb,.dvi,.idx,.ilg,.ind,.inx,.jpg,.log,.out,.png,.toc
set suffixes-=.h
set suffixes-=.obj

" Move temporary files to a secure location to protect against CVE-2017-1000382
if exists('$XDG_CACHE_HOME')
  let &g:directory=$XDG_CACHE_HOME
else
  let &g:directory=$HOME . '/.cache'
endif
let &g:undodir=&g:directory . '/vim/undo//'
let &g:backupdir=&g:directory . '/vim/backup//'
let &g:directory.='/vim/swap//'
" Create directories if they doesn't exist
if ! isdirectory(expand(&g:directory))
  silent! call mkdir(expand(&g:directory), 'p', 0700)
endif
if ! isdirectory(expand(&g:backupdir))
  silent! call mkdir(expand(&g:backupdir), 'p', 0700)
endif
if ! isdirectory(expand(&g:undodir))
  silent! call mkdir(expand(&g:undodir), 'p', 0700)
endif

" Make shift-insert work like in Xterm
if has('gui_running')
  map <S-Insert> <MiddleMouse>
  map! <S-Insert> <MiddleMouse>
endif
